
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSMINUSleftTIMESDIVIDErightUMINUSASSIGN DIVIDE ELSE FOR GREATERTHAN ID IF LBRACE LESSTHAN LPAREN MINUS NUMBER PLUS RBRACE RPAREN SEMICOLON TIMES WHILEprogram : program statementprogram : statementstatement : ID ASSIGN expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression GREATERTHAN expression\n                  | expression LESSTHAN expressionexpression : MINUS expression %prec UMINUSexpression : NUMBERexpression : IDstatement : IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE statements RBRACEstatement : FOR LPAREN ID ASSIGN expression SEMICOLON expression SEMICOLON ID ASSIGN expression RPAREN LBRACE statements RBRACEstatements : statements statementstatements : statement'
    
_lr_action_items = {'ID':([0,1,2,7,8,9,10,11,14,19,20,21,22,23,24,25,29,36,37,39,40,41,42,44,45,48,49,51,52,53,56,57,58,],[3,3,-2,-1,12,12,12,18,12,-3,12,12,12,12,12,12,12,3,3,3,-17,3,12,-16,-14,50,3,3,12,-13,3,3,-15,]),'IF':([0,1,2,7,19,36,37,39,40,41,44,45,49,51,53,56,57,58,],[4,4,-2,-1,-3,4,4,4,-17,4,-16,-14,4,4,-13,4,4,-15,]),'WHILE':([0,1,2,7,19,36,37,39,40,41,44,45,49,51,53,56,57,58,],[5,5,-2,-1,-3,5,5,5,-17,5,-16,-14,5,5,-13,5,5,-15,]),'FOR':([0,1,2,7,19,36,37,39,40,41,44,45,49,51,53,56,57,58,],[6,6,-2,-1,-3,6,6,6,-17,6,-16,-14,6,6,-13,6,6,-15,]),'$end':([1,2,7,19,45,53,58,],[0,-2,-1,-3,-14,-13,-15,]),'ASSIGN':([3,18,50,],[8,29,52,]),'LPAREN':([4,5,6,],[9,10,11,]),'MINUS':([8,9,10,12,13,14,15,16,17,20,21,22,23,24,25,26,29,30,31,32,33,34,35,38,42,46,52,54,],[14,14,14,-12,21,14,-11,21,21,14,14,14,14,14,14,-10,14,-4,-5,-6,-7,21,21,21,14,21,14,21,]),'NUMBER':([8,9,10,14,20,21,22,23,24,25,29,42,52,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'SEMICOLON':([12,13,15,26,30,31,32,33,34,35,38,46,],[-12,19,-11,-10,-4,-5,-6,-7,-8,-9,42,48,]),'PLUS':([12,13,15,16,17,26,30,31,32,33,34,35,38,46,54,],[-12,20,-11,20,20,-10,-4,-5,-6,-7,20,20,20,20,20,]),'TIMES':([12,13,15,16,17,26,30,31,32,33,34,35,38,46,54,],[-12,22,-11,22,22,-10,22,22,-6,-7,22,22,22,22,22,]),'DIVIDE':([12,13,15,16,17,26,30,31,32,33,34,35,38,46,54,],[-12,23,-11,23,23,-10,23,23,-6,-7,23,23,23,23,23,]),'GREATERTHAN':([12,13,15,16,17,26,30,31,32,33,34,35,38,46,54,],[-12,24,-11,24,24,-10,-4,-5,-6,-7,24,24,24,24,24,]),'LESSTHAN':([12,13,15,16,17,26,30,31,32,33,34,35,38,46,54,],[-12,25,-11,25,25,-10,-4,-5,-6,-7,25,25,25,25,25,]),'RPAREN':([12,15,16,17,26,30,31,32,33,34,35,54,],[-12,-11,27,28,-10,-4,-5,-6,-7,-8,-9,55,]),'RBRACE':([19,39,40,41,44,45,51,53,57,58,],[-3,43,-17,45,-16,-14,53,-13,58,-15,]),'LBRACE':([27,28,47,55,],[36,37,49,56,]),'ELSE':([43,],[47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,36,37,39,41,49,51,56,57,],[2,7,40,40,44,44,40,44,40,44,]),'expression':([8,9,10,14,20,21,22,23,24,25,29,42,52,],[13,16,17,26,30,31,32,33,34,35,38,46,54,]),'statements':([36,37,49,56,],[39,41,51,57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program_multiple','parser.py',16),
  ('program -> statement','program',1,'p_program_single','parser.py',20),
  ('statement -> ID ASSIGN expression SEMICOLON','statement',4,'p_statement_assign','parser.py',24),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',28),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',29),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',30),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',31),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression_binop','parser.py',32),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression_binop','parser.py',33),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',43),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',47),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',51),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','statement',11,'p_statement_if','parser.py',55),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_statement_while','parser.py',59),
  ('statement -> FOR LPAREN ID ASSIGN expression SEMICOLON expression SEMICOLON ID ASSIGN expression RPAREN LBRACE statements RBRACE','statement',15,'p_statement_for','parser.py',63),
  ('statements -> statements statement','statements',2,'p_statements_multiple','parser.py',66),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',70),
]
